name: Mosaic CI - Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: master

      - name: Install NodeJS
        uses: actions/setup-node@master
        with:
          node-version: 12

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@master
        env:
          cache-name: mosaic-dependencies
        with:
          path: node_modules
          key: mosaic-dependencies-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Git Config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "github-actions[bot]"
          git pull

      - name: Unit Tests
        run: npm run test-coverage
        env:
          CI: true

      - name: Run ESLint and Prettier
        id: code-format
        run: |
          npm run lintify
          npm run prettify
          echo "::set-output name=formatted-files::$(git status -s -uno | wc -l)"

      - name: Commit Changes
        if: steps.code-format.outputs.formatted-files > 0
        run: |
          git add .
          git commit -m "refactor: prettify" -a

      - name: Generate Docs
        id: generate-docs
        run: |
          npm run build-storybook
          echo "::set-output name=generated-docs::$(git status -s -uno | wc -l)"

      - name: Commit Changes
        if: steps.generate-docs.outputs.generated-docs > 0
        run: |
          git add .
          git commit -m "docs: updated StoryBook" -a

      - name: Build
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Send Notification
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: Mosaic CI - Release
          url: ${{ secrets.GOOGLE_CHAT_MOSAIC }}
          status: ${{ job.status }}
        if: always()
